def merge(A, B): # Функция, которая сливает два отсортированных массива в один отсортированный.
    C = [0]*(len(A) + len(B)) # резервируем новый массив, который будет в итоге возвращен, его размер равен сумме длин двух исходных.
    i = k = n = 0 # изначальные индексы 
    while(i < len(A) and k < len(B)): # цикл до того момента пока один из индексов не вылетит из массива
        if (A[i] <= B[k]): # если элемент из A меньше элемента из B, то кладем в лист C нужный элемент
            C[n] = A[i] 
            n+=1 # увеличиваем то место, куда нужно поставить следующий элемент
            i+=1 # и соответсвенно следующий элемент из a.
        else: # аналогично проделываем с листом из B 
            C[n] = B[k]
            n+=1
            k+=1
    while (i < len(A)): 
        C[n] = A[i]
        i+=1
        n+=1
    while (k < len(B)):
        C[n] = B[k]
        k+=1
        n+=1
    return C
def merg_sort(A):
    if len(A) <= 1:
        return
    middle = len(A)//2
    B = [A[i] for i in range(middle)]
    C = [A[i] for i in range(middle, len(A))]
    K = []
    merg_sort(B)
    merg_sort(C)
    K = merge(B, C)
    for i in range(len(K)):
        A[i] = K[i]
    return A
